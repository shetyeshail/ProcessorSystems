
ICA11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000d36  00000dca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009c  00800106  00800106  00000dd0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001034  00000000  00000000  00000ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a36  00000000  00000000  00001f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069c  00000000  00000000  0000293e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00002fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000583  00000000  00000000  0000312c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000081d  00000000  00000000  000036af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003ecc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__ctors_end>
   4:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
   8:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
   c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_3>
  10:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  14:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  18:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  1c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  20:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  24:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  28:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  2c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  30:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  34:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  38:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  3c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  40:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  44:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  48:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  4c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  50:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  54:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
  58:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_22>

0000005c <LCD_SegTable>:
  5c:	a8 ea 80 2a 00 40 00 0a 51 0a 08 40 59 55 18 01     ...*.@..Q..@YU..
  6c:	11 1e 11 1b 50 0b 41 1b 41 1f 11 01 51 1f 51 1b     ....P.A.A...Q.Q.
  7c:	00 00 00 00 08 80 00 1a 20 40 00 00 00 00 51 0f     ........ @....Q.
  8c:	91 39 41 14 91 31 41 1e 41 0e 41 1d 50 0f 80 20     .9A..1A.A.A.P.. 
  9c:	10 15 48 86 40 14 78 05 70 85 51 15 51 0e 51 95     ..H.@.x.p.Q.Q.Q.
  ac:	51 8e 21 90 81 20 50 15 48 44 50 c5 28 c0 28 20     Q.!.. P.HDP.(.( 
  bc:	09 50 41 14 20 80 11 11 00 00 00 10                 .PA. .......

000000c8 <__ctors_end>:
  c8:	11 24       	eor	r1, r1
  ca:	1f be       	out	0x3f, r1	; 63
  cc:	cf ef       	ldi	r28, 0xFF	; 255
  ce:	d4 e0       	ldi	r29, 0x04	; 4
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
  d4:	11 e0       	ldi	r17, 0x01	; 1
  d6:	a0 e0       	ldi	r26, 0x00	; 0
  d8:	b1 e0       	ldi	r27, 0x01	; 1
  da:	e6 e3       	ldi	r30, 0x36	; 54
  dc:	fd e0       	ldi	r31, 0x0D	; 13
  de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
  e0:	05 90       	lpm	r0, Z+
  e2:	0d 92       	st	X+, r0
  e4:	a6 30       	cpi	r26, 0x06	; 6
  e6:	b1 07       	cpc	r27, r17
  e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
  ea:	21 e0       	ldi	r18, 0x01	; 1
  ec:	a6 e0       	ldi	r26, 0x06	; 6
  ee:	b1 e0       	ldi	r27, 0x01	; 1
  f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
  f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
  f4:	a2 3a       	cpi	r26, 0xA2	; 162
  f6:	b2 07       	cpc	r27, r18
  f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>
  fa:	0e 94 6d 01 	call	0x2da	; 0x2da <main>
  fe:	0c 94 99 06 	jmp	0xd32	; 0xd32 <_exit>

00000102 <__bad_interrupt>:
 102:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000106 <LCD_Init>:
{ 
   uint8_t StrBuff[LCD_TEXTBUFFER_SIZE]; 

   strcpy_P(StrBuff, FlashData); 
   LCD_puts(StrBuff); 
} 
 106:	8f e0       	ldi	r24, 0x0F	; 15
 108:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
 10c:	87 eb       	ldi	r24, 0xB7	; 183
 10e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
 112:	87 e0       	ldi	r24, 0x07	; 7
 114:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
 118:	e4 ee       	ldi	r30, 0xE4	; 228
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 ec       	ldi	r24, 0xC0	; 192
 11e:	80 83       	st	Z, r24
 120:	80 81       	ld	r24, Z
 122:	88 60       	ori	r24, 0x08	; 8
 124:	80 83       	st	Z, r24
 126:	08 95       	ret

00000128 <LCD_puts>:
 128:	dc 01       	movw	r26, r24
 12a:	eb e0       	ldi	r30, 0x0B	; 11
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	2d 91       	ld	r18, X+
 134:	36 ed       	ldi	r19, 0xD6	; 214
 136:	32 0f       	add	r19, r18
 138:	31 35       	cpi	r19, 0x51	; 81
 13a:	28 f4       	brcc	.+10     	; 0x146 <LCD_puts+0x1e>
 13c:	20 32       	cpi	r18, 0x20	; 32
 13e:	09 f4       	brne	.+2      	; 0x142 <LCD_puts+0x1a>
 140:	38 2f       	mov	r19, r24
 142:	30 83       	st	Z, r19
 144:	03 c0       	rjmp	.+6      	; 0x14c <LCD_puts+0x24>
 146:	22 23       	and	r18, r18
 148:	29 f0       	breq	.+10     	; 0x154 <LCD_puts+0x2c>
 14a:	80 83       	st	Z, r24
 14c:	9f 5f       	subi	r25, 0xFF	; 255
 14e:	31 96       	adiw	r30, 0x01	; 1
 150:	94 31       	cpi	r25, 0x14	; 20
 152:	79 f7       	brne	.-34     	; 0x132 <LCD_puts+0xa>
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	97 30       	cpi	r25, 0x07	; 7
 158:	08 f4       	brcc	.+2      	; 0x15c <LCD_puts+0x34>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <ScrollMode>
 160:	8a e0       	ldi	r24, 0x0A	; 10
 162:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <ScrollCount>
 166:	87 e0       	ldi	r24, 0x07	; 7
 168:	89 0f       	add	r24, r25
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	e9 2f       	mov	r30, r25
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	e5 5f       	subi	r30, 0xF5	; 245
 172:	fe 4f       	sbci	r31, 0xFE	; 254
 174:	20 83       	st	Z, r18
 176:	9f 5f       	subi	r25, 0xFF	; 255
 178:	98 13       	cpse	r25, r24
 17a:	f8 cf       	rjmp	.-16     	; 0x16c <LCD_puts+0x44>
 17c:	e8 2f       	mov	r30, r24
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	e5 5f       	subi	r30, 0xF5	; 245
 182:	fe 4f       	sbci	r31, 0xFE	; 254
 184:	10 82       	st	Z, r1
 186:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <StrStart>
 18a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <StrEnd>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <UpdateLCD>
 194:	08 95       	ret

00000196 <LCD_WriteChar>:
} 

void LCD_WriteChar(uint8_t Byte, uint8_t Digit) 
{ 
   uint16_t SegData  = 0x00; 
   uint8_t  *BuffPtr = (&SegBuffer[0] + (Digit >> 1)); 
 196:	a6 2f       	mov	r26, r22
 198:	a6 95       	lsr	r26
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	a9 5d       	subi	r26, 0xD9	; 217
 19e:	be 4f       	sbci	r27, 0xFE	; 254

   if (Byte != 0xFF) 
 1a0:	8f 3f       	cpi	r24, 0xFF	; 255
 1a2:	f1 f0       	breq	.+60     	; 0x1e0 <LCD_WriteChar+0x4a>
     SegData = pgm_read_word(&LCD_SegTable[Byte]);    
 1a4:	e8 2f       	mov	r30, r24
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	ee 0f       	add	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	e4 5a       	subi	r30, 0xA4	; 164
 1ae:	ff 4f       	sbci	r31, 0xFF	; 255
 1b0:	25 91       	lpm	r18, Z+
 1b2:	34 91       	lpm	r19, Z
 1b4:	17 c0       	rjmp	.+46     	; 0x1e4 <LCD_WriteChar+0x4e>

   for (uint8_t BNib = 0; BNib < 4; BNib++) 
   { 
      uint8_t Mask          = 0xF0; 
      uint8_t MaskedSegData = (SegData & 0x0000F); 
 1b6:	82 2f       	mov	r24, r18
 1b8:	8f 70       	andi	r24, 0x0F	; 15
    
      if (Digit & 0x01) 
 1ba:	55 23       	and	r21, r21
 1bc:	11 f0       	breq	.+4      	; 0x1c2 <LCD_WriteChar+0x2c>
      { 
         Mask = 0x0F; 
         MaskedSegData <<= 4; 
 1be:	82 95       	swap	r24
 1c0:	80 7f       	andi	r24, 0xF0	; 240
      } 
        
      *BuffPtr = ((*BuffPtr & Mask) | MaskedSegData); 
 1c2:	9c 91       	ld	r25, X
 1c4:	94 23       	and	r25, r20
 1c6:	89 2b       	or	r24, r25
 1c8:	8c 93       	st	X, r24

      SegData >>= 4; 
 1ca:	32 95       	swap	r19
 1cc:	22 95       	swap	r18
 1ce:	2f 70       	andi	r18, 0x0F	; 15
 1d0:	23 27       	eor	r18, r19
 1d2:	3f 70       	andi	r19, 0x0F	; 15
 1d4:	23 27       	eor	r18, r19
      BuffPtr  += 5; 
 1d6:	15 96       	adiw	r26, 0x05	; 5
   uint8_t  *BuffPtr = (&SegBuffer[0] + (Digit >> 1)); 

   if (Byte != 0xFF) 
     SegData = pgm_read_word(&LCD_SegTable[Byte]);    

   for (uint8_t BNib = 0; BNib < 4; BNib++) 
 1d8:	6a 17       	cp	r22, r26
 1da:	7b 07       	cpc	r23, r27
 1dc:	61 f7       	brne	.-40     	; 0x1b6 <LCD_WriteChar+0x20>
 1de:	08 95       	ret
   UpdateLCD  = TRUE; 
} 

void LCD_WriteChar(uint8_t Byte, uint8_t Digit) 
{ 
   uint16_t SegData  = 0x00; 
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	56 2f       	mov	r21, r22
 1e6:	51 70       	andi	r21, 0x01	; 1
 1e8:	60 ff       	sbrs	r22, 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <LCD_WriteChar+0x5a>
 1ec:	4f e0       	ldi	r20, 0x0F	; 15
 1ee:	01 c0       	rjmp	.+2      	; 0x1f2 <LCD_WriteChar+0x5c>
 1f0:	40 ef       	ldi	r20, 0xF0	; 240
 1f2:	bd 01       	movw	r22, r26
 1f4:	6c 5e       	subi	r22, 0xEC	; 236
 1f6:	7f 4f       	sbci	r23, 0xFF	; 255
 1f8:	de cf       	rjmp	.-68     	; 0x1b6 <LCD_WriteChar+0x20>

000001fa <__vector_22>:
      BuffPtr  += 5; 
   } 
} 

ISR(LCD_vect) 
{ 
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	cf 93       	push	r28
 21a:	ef 93       	push	r30
 21c:	ff 93       	push	r31
   if (ScrollMode) 
 21e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <ScrollMode>
 222:	88 23       	and	r24, r24
 224:	09 f4       	brne	.+2      	; 0x228 <__vector_22+0x2e>
 226:	42 c0       	rjmp	.+132    	; 0x2ac <__vector_22+0xb2>
   { 
      if (!(ScrollCount)) 
 228:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <ScrollCount>
 22c:	81 11       	cpse	r24, r1
 22e:	04 c0       	rjmp	.+8      	; 0x238 <__vector_22+0x3e>
        UpdateLCD = TRUE; 
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <UpdateLCD>
 236:	04 c0       	rjmp	.+8      	; 0x240 <__vector_22+0x46>
      else 
        ScrollCount--; 
 238:	81 50       	subi	r24, 0x01	; 1
 23a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <ScrollCount>
 23e:	36 c0       	rjmp	.+108    	; 0x2ac <__vector_22+0xb2>
      BuffPtr  += 5; 
   } 
} 

ISR(LCD_vect) 
{ 
 240:	c0 e0       	ldi	r28, 0x00	; 0

   if (UpdateLCD) 
   { 
      for (uint8_t Character = 0; Character < 6; Character++)
      { 
         uint8_t Byte = (StrStart + Character); 
 242:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <StrStart>
 246:	ec 0f       	add	r30, r28

         if (Byte >= StrEnd) 
 248:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <StrEnd>
 24c:	e8 17       	cp	r30, r24
 24e:	38 f0       	brcs	.+14     	; 0x25e <__vector_22+0x64>
           Byte = TextBuffer[Byte - StrEnd]; 
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	e8 1b       	sub	r30, r24
 254:	f1 09       	sbc	r31, r1
 256:	e5 5f       	subi	r30, 0xF5	; 245
 258:	fe 4f       	sbci	r31, 0xFE	; 254
 25a:	80 81       	ld	r24, Z
 25c:	04 c0       	rjmp	.+8      	; 0x266 <__vector_22+0x6c>
         else 
           Byte = TextBuffer[Byte]; 
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	e5 5f       	subi	r30, 0xF5	; 245
 262:	fe 4f       	sbci	r31, 0xFE	; 254
 264:	80 81       	ld	r24, Z
          
         LCD_WriteChar(Byte, Character); 
 266:	6c 2f       	mov	r22, r28
 268:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteChar>
        ScrollCount--; 
   } 

   if (UpdateLCD) 
   { 
      for (uint8_t Character = 0; Character < 6; Character++)
 26c:	cf 5f       	subi	r28, 0xFF	; 255
 26e:	c6 30       	cpi	r28, 0x06	; 6
 270:	41 f7       	brne	.-48     	; 0x242 <__vector_22+0x48>
           Byte = TextBuffer[Byte]; 
          
         LCD_WriteChar(Byte, Character); 
      } 
        
      if (StrStart++ == StrEnd) 
 272:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <StrStart>
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	98 0f       	add	r25, r24
 27a:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <StrStart>
 27e:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <StrEnd>
 282:	89 13       	cpse	r24, r25
 284:	03 c0       	rjmp	.+6      	; 0x28c <__vector_22+0x92>
        StrStart = 1; 
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <StrStart>
        
      ScrollCount = LCD_SCROLLCOUNT_DEFAULT; 
 28c:	83 e0       	ldi	r24, 0x03	; 3
 28e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <ScrollCount>
      UpdateLCD = FALSE; 
 292:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <UpdateLCD>
 296:	a7 e2       	ldi	r26, 0x27	; 39
 298:	b1 e0       	ldi	r27, 0x01	; 1
      BuffPtr  += 5; 
   } 
} 

ISR(LCD_vect) 
{ 
 29a:	ec ee       	ldi	r30, 0xEC	; 236
 29c:	f0 e0       	ldi	r31, 0x00	; 0
      ScrollCount = LCD_SCROLLCOUNT_DEFAULT; 
      UpdateLCD = FALSE; 
   } 

   for (uint8_t LCDChar = 0; LCDChar < LCD_SEGBUFFER_SIZE; LCDChar++) 
     *(pLCDREG + LCDChar) = SegBuffer[LCDChar]; 
 29e:	8d 91       	ld	r24, X+
 2a0:	81 93       	st	Z+, r24
        
      ScrollCount = LCD_SCROLLCOUNT_DEFAULT; 
      UpdateLCD = FALSE; 
   } 

   for (uint8_t LCDChar = 0; LCDChar < LCD_SEGBUFFER_SIZE; LCDChar++) 
 2a2:	e1 15       	cp	r30, r1
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	f8 07       	cpc	r31, r24
 2a8:	d1 f7       	brne	.-12     	; 0x29e <__vector_22+0xa4>
 2aa:	05 c0       	rjmp	.+10     	; 0x2b6 <__vector_22+0xbc>
        UpdateLCD = TRUE; 
      else 
        ScrollCount--; 
   } 

   if (UpdateLCD) 
 2ac:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <UpdateLCD>
 2b0:	88 23       	and	r24, r24
 2b2:	89 f3       	breq	.-30     	; 0x296 <__vector_22+0x9c>
 2b4:	c5 cf       	rjmp	.-118    	; 0x240 <__vector_22+0x46>
      UpdateLCD = FALSE; 
   } 

   for (uint8_t LCDChar = 0; LCDChar < LCD_SEGBUFFER_SIZE; LCDChar++) 
     *(pLCDREG + LCDChar) = SegBuffer[LCDChar]; 
 2b6:	ff 91       	pop	r31
 2b8:	ef 91       	pop	r30
 2ba:	cf 91       	pop	r28
 2bc:	bf 91       	pop	r27
 2be:	af 91       	pop	r26
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	7f 91       	pop	r23
 2c6:	6f 91       	pop	r22
 2c8:	5f 91       	pop	r21
 2ca:	4f 91       	pop	r20
 2cc:	3f 91       	pop	r19
 2ce:	2f 91       	pop	r18
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <main>:
int dist;
char str[100];

int main(void)					//main function
{
	DDRB = 0x2;					//set input/output
 2da:	c2 e0       	ldi	r28, 0x02	; 2
 2dc:	c4 b9       	out	0x04, r28	; 4
	LCD_Init();					//initialize LCD screen
 2de:	0e 94 83 00 	call	0x106	; 0x106 <LCD_Init>
	
	PCMSK1 = (1<<PINB0);		//pin change interrupt
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	EIMSK = (1<<PCIE1);			//external interrupts
 2e8:	90 e8       	ldi	r25, 0x80	; 128
 2ea:	9d bb       	out	0x1d, r25	; 29
	
	TCCR0A = (1<<CS02);			//timer interrupts
 2ec:	94 e0       	ldi	r25, 0x04	; 4
 2ee:	94 bd       	out	0x24, r25	; 36
	TIMSK0 = (1<<OCIE0A);
 2f0:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	DDRB = 3;					//turns on and off with a delay in the middle				
 2f4:	93 e0       	ldi	r25, 0x03	; 3
 2f6:	94 b9       	out	0x04, r25	; 4
	PORTB = 0;
 2f8:	15 b8       	out	0x05, r1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <main+0x22>
	_delay_us(2);
	PORTB = 1;
 2fc:	85 b9       	out	0x05, r24	; 5
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x26>
 300:	00 c0       	rjmp	.+0      	; 0x302 <main+0x28>
 302:	00 00       	nop
	_delay_us(5);
	DDRB = 2;
 304:	c4 b9       	out	0x04, r28	; 4
	
	sei();						// Set the interrupt
 306:	78 94       	sei
 308:	ff cf       	rjmp	.-2      	; 0x308 <main+0x2e>

0000030a <__vector_3>:
	while(1){
	}
}


ISR(PCINT1_vect){
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	2f 93       	push	r18
 316:	3f 93       	push	r19
 318:	4f 93       	push	r20
 31a:	5f 93       	push	r21
 31c:	6f 93       	push	r22
 31e:	7f 93       	push	r23
 320:	8f 93       	push	r24
 322:	9f 93       	push	r25
 324:	af 93       	push	r26
 326:	bf 93       	push	r27
 328:	ef 93       	push	r30
 32a:	ff 93       	push	r31
	count++;
 32c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 330:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 33a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	
	if (count == 3){
 33e:	03 97       	sbiw	r24, 0x03	; 3
 340:	09 f4       	brne	.+2      	; 0x344 <__vector_3+0x3a>
		TCNT0 = 0;
 342:	16 bc       	out	0x26, r1	; 38
	}
	
	if (count == 4){
 344:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 348:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 34c:	04 97       	sbiw	r24, 0x04	; 4
 34e:	09 f0       	breq	.+2      	; 0x352 <__vector_3+0x48>
 350:	c4 c0       	rjmp	.+392    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
		dist = TCNT0 * .214;
 352:	66 b5       	in	r22, 0x26	; 38
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 b6 02 	call	0x56c	; 0x56c <__floatsisf>
 35e:	21 ed       	ldi	r18, 0xD1	; 209
 360:	32 e2       	ldi	r19, 0x22	; 34
 362:	4b e5       	ldi	r20, 0x5B	; 91
 364:	5e e3       	ldi	r21, 0x3E	; 62
 366:	0e 94 1a 03 	call	0x634	; 0x634 <__mulsf3>
 36a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__fixsfsi>
 36e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <dist>
 372:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <dist+0x1>
		sprintf(str,"%d IN",dist);
 376:	7f 93       	push	r23
 378:	6f 93       	push	r22
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	9f 93       	push	r25
 380:	8f 93       	push	r24
 382:	8e e3       	ldi	r24, 0x3E	; 62
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	0e 94 af 03 	call	0x75e	; 0x75e <sprintf>
		LCD_puts(str);
 38e:	8e e3       	ldi	r24, 0x3E	; 62
 390:	91 e0       	ldi	r25, 0x01	; 1
 392:	0e 94 94 00 	call	0x128	; 0x128 <LCD_puts>
		count = 0;
 396:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
 39a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
		TCNT0 = 0;
 39e:	16 bc       	out	0x26, r1	; 38
		
		if (dist > 30){							//if portb is greater than 30, do nothing
 3a0:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <dist>
 3a4:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <dist+0x1>
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	8f 31       	cpi	r24, 0x1F	; 31
 3b6:	91 05       	cpc	r25, r1
 3b8:	14 f0       	brlt	.+4      	; 0x3be <__vector_3+0xb4>
			PORTB = 0x0;
 3ba:	15 b8       	out	0x05, r1	; 5
 3bc:	8e c0       	rjmp	.+284    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
		}
		
		else if (dist <= 5){					//if portb is less than or equal to 5 turn on
 3be:	86 30       	cpi	r24, 0x06	; 6
 3c0:	91 05       	cpc	r25, r1
 3c2:	1c f4       	brge	.+6      	; 0x3ca <__vector_3+0xc0>
			PORTB = 0x2;
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	85 b9       	out	0x05, r24	; 5
 3c8:	88 c0       	rjmp	.+272    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
		}
		
		else if (dist > 5 && dist <= 10){		//if portb is between 5 and 10 blink with 300 delay
 3ca:	9c 01       	movw	r18, r24
 3cc:	26 50       	subi	r18, 0x06	; 6
 3ce:	31 09       	sbc	r19, r1
 3d0:	25 30       	cpi	r18, 0x05	; 5
 3d2:	31 05       	cpc	r19, r1
 3d4:	b0 f4       	brcc	.+44     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			PORTB = 0x2;
 3d6:	82 e0       	ldi	r24, 0x02	; 2
 3d8:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3da:	2f e5       	ldi	r18, 0x5F	; 95
 3dc:	8a ee       	ldi	r24, 0xEA	; 234
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	21 50       	subi	r18, 0x01	; 1
 3e2:	80 40       	sbci	r24, 0x00	; 0
 3e4:	90 40       	sbci	r25, 0x00	; 0
 3e6:	e1 f7       	brne	.-8      	; 0x3e0 <__vector_3+0xd6>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <__vector_3+0xe0>
 3ea:	00 00       	nop
			_delay_ms(300);
			PORTB = 0x0;
 3ec:	15 b8       	out	0x05, r1	; 5
 3ee:	2f e5       	ldi	r18, 0x5F	; 95
 3f0:	8a ee       	ldi	r24, 0xEA	; 234
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	21 50       	subi	r18, 0x01	; 1
 3f6:	80 40       	sbci	r24, 0x00	; 0
 3f8:	90 40       	sbci	r25, 0x00	; 0
 3fa:	e1 f7       	brne	.-8      	; 0x3f4 <__vector_3+0xea>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <__vector_3+0xf4>
 3fe:	00 00       	nop
 400:	6c c0       	rjmp	.+216    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
			_delay_ms(300);
		}
		
		else if (dist > 10 && dist <= 15){		//if portb is between 10 and 15 blink with 450 delay
 402:	9c 01       	movw	r18, r24
 404:	2b 50       	subi	r18, 0x0B	; 11
 406:	31 09       	sbc	r19, r1
 408:	25 30       	cpi	r18, 0x05	; 5
 40a:	31 05       	cpc	r19, r1
 40c:	b0 f4       	brcc	.+44     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
			PORTB = 0x2;
 40e:	82 e0       	ldi	r24, 0x02	; 2
 410:	85 b9       	out	0x05, r24	; 5
 412:	2f e8       	ldi	r18, 0x8F	; 143
 414:	8f e5       	ldi	r24, 0x5F	; 95
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	21 50       	subi	r18, 0x01	; 1
 41a:	80 40       	sbci	r24, 0x00	; 0
 41c:	90 40       	sbci	r25, 0x00	; 0
 41e:	e1 f7       	brne	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 422:	00 00       	nop
			_delay_ms(450);
			PORTB = 0x0;
 424:	15 b8       	out	0x05, r1	; 5
 426:	2f e8       	ldi	r18, 0x8F	; 143
 428:	8f e5       	ldi	r24, 0x5F	; 95
 42a:	91 e0       	ldi	r25, 0x01	; 1
 42c:	21 50       	subi	r18, 0x01	; 1
 42e:	80 40       	sbci	r24, 0x00	; 0
 430:	90 40       	sbci	r25, 0x00	; 0
 432:	e1 f7       	brne	.-8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 434:	00 c0       	rjmp	.+0      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 436:	00 00       	nop
 438:	50 c0       	rjmp	.+160    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
			_delay_ms(450);
		}
		
		else if (dist > 15 && dist <= 20){		//if portb is between 10 and 20 blink with 600 delay
 43a:	9c 01       	movw	r18, r24
 43c:	20 51       	subi	r18, 0x10	; 16
 43e:	31 09       	sbc	r19, r1
 440:	25 30       	cpi	r18, 0x05	; 5
 442:	31 05       	cpc	r19, r1
 444:	b0 f4       	brcc	.+44     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
			PORTB = 0x2;
 446:	82 e0       	ldi	r24, 0x02	; 2
 448:	85 b9       	out	0x05, r24	; 5
 44a:	2f eb       	ldi	r18, 0xBF	; 191
 44c:	84 ed       	ldi	r24, 0xD4	; 212
 44e:	91 e0       	ldi	r25, 0x01	; 1
 450:	21 50       	subi	r18, 0x01	; 1
 452:	80 40       	sbci	r24, 0x00	; 0
 454:	90 40       	sbci	r25, 0x00	; 0
 456:	e1 f7       	brne	.-8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 458:	00 c0       	rjmp	.+0      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45a:	00 00       	nop
			_delay_ms(600);
			PORTB = 0x0;
 45c:	15 b8       	out	0x05, r1	; 5
 45e:	2f eb       	ldi	r18, 0xBF	; 191
 460:	84 ed       	ldi	r24, 0xD4	; 212
 462:	91 e0       	ldi	r25, 0x01	; 1
 464:	21 50       	subi	r18, 0x01	; 1
 466:	80 40       	sbci	r24, 0x00	; 0
 468:	90 40       	sbci	r25, 0x00	; 0
 46a:	e1 f7       	brne	.-8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
 470:	34 c0       	rjmp	.+104    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
			_delay_ms(600);
		}
		
		else if (dist > 20 && dist <= 25){		//if portb is between 20 and 25 blink with 750 delay
 472:	9c 01       	movw	r18, r24
 474:	25 51       	subi	r18, 0x15	; 21
 476:	31 09       	sbc	r19, r1
 478:	25 30       	cpi	r18, 0x05	; 5
 47a:	31 05       	cpc	r19, r1
 47c:	b0 f4       	brcc	.+44     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
			PORTB = 0x2;
 47e:	82 e0       	ldi	r24, 0x02	; 2
 480:	85 b9       	out	0x05, r24	; 5
 482:	2f ee       	ldi	r18, 0xEF	; 239
 484:	89 e4       	ldi	r24, 0x49	; 73
 486:	92 e0       	ldi	r25, 0x02	; 2
 488:	21 50       	subi	r18, 0x01	; 1
 48a:	80 40       	sbci	r24, 0x00	; 0
 48c:	90 40       	sbci	r25, 0x00	; 0
 48e:	e1 f7       	brne	.-8      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 492:	00 00       	nop
			_delay_ms(750);
			PORTB = 0x0;
 494:	15 b8       	out	0x05, r1	; 5
 496:	2f ee       	ldi	r18, 0xEF	; 239
 498:	89 e4       	ldi	r24, 0x49	; 73
 49a:	92 e0       	ldi	r25, 0x02	; 2
 49c:	21 50       	subi	r18, 0x01	; 1
 49e:	80 40       	sbci	r24, 0x00	; 0
 4a0:	90 40       	sbci	r25, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4a6:	00 00       	nop
 4a8:	18 c0       	rjmp	.+48     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
			_delay_ms(750);
		}
		
		else if (dist > 25 && dist <= 30){		//if portb is between 25 and 30 blink with 1000 delay
 4aa:	4a 97       	sbiw	r24, 0x1a	; 26
 4ac:	05 97       	sbiw	r24, 0x05	; 5
 4ae:	a8 f4       	brcc	.+42     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
			PORTB = 0x2;
 4b0:	82 e0       	ldi	r24, 0x02	; 2
 4b2:	85 b9       	out	0x05, r24	; 5
 4b4:	2f e3       	ldi	r18, 0x3F	; 63
 4b6:	8d e0       	ldi	r24, 0x0D	; 13
 4b8:	93 e0       	ldi	r25, 0x03	; 3
 4ba:	21 50       	subi	r18, 0x01	; 1
 4bc:	80 40       	sbci	r24, 0x00	; 0
 4be:	90 40       	sbci	r25, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c4:	00 00       	nop
			_delay_ms(1000);
			PORTB = 0x0;
 4c6:	15 b8       	out	0x05, r1	; 5
 4c8:	2f e3       	ldi	r18, 0x3F	; 63
 4ca:	8d e0       	ldi	r24, 0x0D	; 13
 4cc:	93 e0       	ldi	r25, 0x03	; 3
 4ce:	21 50       	subi	r18, 0x01	; 1
 4d0:	80 40       	sbci	r24, 0x00	; 0
 4d2:	90 40       	sbci	r25, 0x00	; 0
 4d4:	e1 f7       	brne	.-8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d8:	00 00       	nop
			_delay_ms(1000);
		}

		return;
	}
 4da:	ff 91       	pop	r31
 4dc:	ef 91       	pop	r30
 4de:	bf 91       	pop	r27
 4e0:	af 91       	pop	r26
 4e2:	9f 91       	pop	r25
 4e4:	8f 91       	pop	r24
 4e6:	7f 91       	pop	r23
 4e8:	6f 91       	pop	r22
 4ea:	5f 91       	pop	r21
 4ec:	4f 91       	pop	r20
 4ee:	3f 91       	pop	r19
 4f0:	2f 91       	pop	r18
 4f2:	0f 90       	pop	r0
 4f4:	0f be       	out	0x3f, r0	; 63
 4f6:	0f 90       	pop	r0
 4f8:	1f 90       	pop	r1
 4fa:	18 95       	reti

000004fc <__fixsfsi>:
 4fc:	0e 94 85 02 	call	0x50a	; 0x50a <__fixunssfsi>
 500:	68 94       	set
 502:	b1 11       	cpse	r27, r1
 504:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 508:	08 95       	ret

0000050a <__fixunssfsi>:
 50a:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_splitA>
 50e:	88 f0       	brcs	.+34     	; 0x532 <__fixunssfsi+0x28>
 510:	9f 57       	subi	r25, 0x7F	; 127
 512:	98 f0       	brcs	.+38     	; 0x53a <__fixunssfsi+0x30>
 514:	b9 2f       	mov	r27, r25
 516:	99 27       	eor	r25, r25
 518:	b7 51       	subi	r27, 0x17	; 23
 51a:	b0 f0       	brcs	.+44     	; 0x548 <__fixunssfsi+0x3e>
 51c:	e1 f0       	breq	.+56     	; 0x556 <__fixunssfsi+0x4c>
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	88 1f       	adc	r24, r24
 524:	99 1f       	adc	r25, r25
 526:	1a f0       	brmi	.+6      	; 0x52e <__fixunssfsi+0x24>
 528:	ba 95       	dec	r27
 52a:	c9 f7       	brne	.-14     	; 0x51e <__fixunssfsi+0x14>
 52c:	14 c0       	rjmp	.+40     	; 0x556 <__fixunssfsi+0x4c>
 52e:	b1 30       	cpi	r27, 0x01	; 1
 530:	91 f0       	breq	.+36     	; 0x556 <__fixunssfsi+0x4c>
 532:	0e 94 13 03 	call	0x626	; 0x626 <__fp_zero>
 536:	b1 e0       	ldi	r27, 0x01	; 1
 538:	08 95       	ret
 53a:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_zero>
 53e:	67 2f       	mov	r22, r23
 540:	78 2f       	mov	r23, r24
 542:	88 27       	eor	r24, r24
 544:	b8 5f       	subi	r27, 0xF8	; 248
 546:	39 f0       	breq	.+14     	; 0x556 <__fixunssfsi+0x4c>
 548:	b9 3f       	cpi	r27, 0xF9	; 249
 54a:	cc f3       	brlt	.-14     	; 0x53e <__fixunssfsi+0x34>
 54c:	86 95       	lsr	r24
 54e:	77 95       	ror	r23
 550:	67 95       	ror	r22
 552:	b3 95       	inc	r27
 554:	d9 f7       	brne	.-10     	; 0x54c <__fixunssfsi+0x42>
 556:	3e f4       	brtc	.+14     	; 0x566 <__fixunssfsi+0x5c>
 558:	90 95       	com	r25
 55a:	80 95       	com	r24
 55c:	70 95       	com	r23
 55e:	61 95       	neg	r22
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	08 95       	ret

00000568 <__floatunsisf>:
 568:	e8 94       	clt
 56a:	09 c0       	rjmp	.+18     	; 0x57e <__floatsisf+0x12>

0000056c <__floatsisf>:
 56c:	97 fb       	bst	r25, 7
 56e:	3e f4       	brtc	.+14     	; 0x57e <__floatsisf+0x12>
 570:	90 95       	com	r25
 572:	80 95       	com	r24
 574:	70 95       	com	r23
 576:	61 95       	neg	r22
 578:	7f 4f       	sbci	r23, 0xFF	; 255
 57a:	8f 4f       	sbci	r24, 0xFF	; 255
 57c:	9f 4f       	sbci	r25, 0xFF	; 255
 57e:	99 23       	and	r25, r25
 580:	a9 f0       	breq	.+42     	; 0x5ac <__floatsisf+0x40>
 582:	f9 2f       	mov	r31, r25
 584:	96 e9       	ldi	r25, 0x96	; 150
 586:	bb 27       	eor	r27, r27
 588:	93 95       	inc	r25
 58a:	f6 95       	lsr	r31
 58c:	87 95       	ror	r24
 58e:	77 95       	ror	r23
 590:	67 95       	ror	r22
 592:	b7 95       	ror	r27
 594:	f1 11       	cpse	r31, r1
 596:	f8 cf       	rjmp	.-16     	; 0x588 <__floatsisf+0x1c>
 598:	fa f4       	brpl	.+62     	; 0x5d8 <__floatsisf+0x6c>
 59a:	bb 0f       	add	r27, r27
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__floatsisf+0x36>
 59e:	60 ff       	sbrs	r22, 0
 5a0:	1b c0       	rjmp	.+54     	; 0x5d8 <__floatsisf+0x6c>
 5a2:	6f 5f       	subi	r22, 0xFF	; 255
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255
 5a6:	8f 4f       	sbci	r24, 0xFF	; 255
 5a8:	9f 4f       	sbci	r25, 0xFF	; 255
 5aa:	16 c0       	rjmp	.+44     	; 0x5d8 <__floatsisf+0x6c>
 5ac:	88 23       	and	r24, r24
 5ae:	11 f0       	breq	.+4      	; 0x5b4 <__floatsisf+0x48>
 5b0:	96 e9       	ldi	r25, 0x96	; 150
 5b2:	11 c0       	rjmp	.+34     	; 0x5d6 <__floatsisf+0x6a>
 5b4:	77 23       	and	r23, r23
 5b6:	21 f0       	breq	.+8      	; 0x5c0 <__floatsisf+0x54>
 5b8:	9e e8       	ldi	r25, 0x8E	; 142
 5ba:	87 2f       	mov	r24, r23
 5bc:	76 2f       	mov	r23, r22
 5be:	05 c0       	rjmp	.+10     	; 0x5ca <__floatsisf+0x5e>
 5c0:	66 23       	and	r22, r22
 5c2:	71 f0       	breq	.+28     	; 0x5e0 <__floatsisf+0x74>
 5c4:	96 e8       	ldi	r25, 0x86	; 134
 5c6:	86 2f       	mov	r24, r22
 5c8:	70 e0       	ldi	r23, 0x00	; 0
 5ca:	60 e0       	ldi	r22, 0x00	; 0
 5cc:	2a f0       	brmi	.+10     	; 0x5d8 <__floatsisf+0x6c>
 5ce:	9a 95       	dec	r25
 5d0:	66 0f       	add	r22, r22
 5d2:	77 1f       	adc	r23, r23
 5d4:	88 1f       	adc	r24, r24
 5d6:	da f7       	brpl	.-10     	; 0x5ce <__floatsisf+0x62>
 5d8:	88 0f       	add	r24, r24
 5da:	96 95       	lsr	r25
 5dc:	87 95       	ror	r24
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__fp_split3>:
 5e2:	57 fd       	sbrc	r21, 7
 5e4:	90 58       	subi	r25, 0x80	; 128
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	59 f0       	breq	.+22     	; 0x602 <__fp_splitA+0x10>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	71 f0       	breq	.+28     	; 0x60c <__fp_splitA+0x1a>
 5f0:	47 95       	ror	r20

000005f2 <__fp_splitA>:
 5f2:	88 0f       	add	r24, r24
 5f4:	97 fb       	bst	r25, 7
 5f6:	99 1f       	adc	r25, r25
 5f8:	61 f0       	breq	.+24     	; 0x612 <__fp_splitA+0x20>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	79 f0       	breq	.+30     	; 0x61c <__fp_splitA+0x2a>
 5fe:	87 95       	ror	r24
 600:	08 95       	ret
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	55 1f       	adc	r21, r21
 60a:	f2 cf       	rjmp	.-28     	; 0x5f0 <__fp_split3+0xe>
 60c:	46 95       	lsr	r20
 60e:	f1 df       	rcall	.-30     	; 0x5f2 <__fp_splitA>
 610:	08 c0       	rjmp	.+16     	; 0x622 <__fp_splitA+0x30>
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	99 1f       	adc	r25, r25
 61a:	f1 cf       	rjmp	.-30     	; 0x5fe <__fp_splitA+0xc>
 61c:	86 95       	lsr	r24
 61e:	71 05       	cpc	r23, r1
 620:	61 05       	cpc	r22, r1
 622:	08 94       	sec
 624:	08 95       	ret

00000626 <__fp_zero>:
 626:	e8 94       	clt

00000628 <__fp_szero>:
 628:	bb 27       	eor	r27, r27
 62a:	66 27       	eor	r22, r22
 62c:	77 27       	eor	r23, r23
 62e:	cb 01       	movw	r24, r22
 630:	97 f9       	bld	r25, 7
 632:	08 95       	ret

00000634 <__mulsf3>:
 634:	0e 94 2d 03 	call	0x65a	; 0x65a <__mulsf3x>
 638:	0c 94 9e 03 	jmp	0x73c	; 0x73c <__fp_round>
 63c:	0e 94 90 03 	call	0x720	; 0x720 <__fp_pscA>
 640:	38 f0       	brcs	.+14     	; 0x650 <__mulsf3+0x1c>
 642:	0e 94 97 03 	call	0x72e	; 0x72e <__fp_pscB>
 646:	20 f0       	brcs	.+8      	; 0x650 <__mulsf3+0x1c>
 648:	95 23       	and	r25, r21
 64a:	11 f0       	breq	.+4      	; 0x650 <__mulsf3+0x1c>
 64c:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_inf>
 650:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_nan>
 654:	11 24       	eor	r1, r1
 656:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>

0000065a <__mulsf3x>:
 65a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 65e:	70 f3       	brcs	.-36     	; 0x63c <__mulsf3+0x8>

00000660 <__mulsf3_pse>:
 660:	95 9f       	mul	r25, r21
 662:	c1 f3       	breq	.-16     	; 0x654 <__mulsf3+0x20>
 664:	95 0f       	add	r25, r21
 666:	50 e0       	ldi	r21, 0x00	; 0
 668:	55 1f       	adc	r21, r21
 66a:	62 9f       	mul	r22, r18
 66c:	f0 01       	movw	r30, r0
 66e:	72 9f       	mul	r23, r18
 670:	bb 27       	eor	r27, r27
 672:	f0 0d       	add	r31, r0
 674:	b1 1d       	adc	r27, r1
 676:	63 9f       	mul	r22, r19
 678:	aa 27       	eor	r26, r26
 67a:	f0 0d       	add	r31, r0
 67c:	b1 1d       	adc	r27, r1
 67e:	aa 1f       	adc	r26, r26
 680:	64 9f       	mul	r22, r20
 682:	66 27       	eor	r22, r22
 684:	b0 0d       	add	r27, r0
 686:	a1 1d       	adc	r26, r1
 688:	66 1f       	adc	r22, r22
 68a:	82 9f       	mul	r24, r18
 68c:	22 27       	eor	r18, r18
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	62 1f       	adc	r22, r18
 694:	73 9f       	mul	r23, r19
 696:	b0 0d       	add	r27, r0
 698:	a1 1d       	adc	r26, r1
 69a:	62 1f       	adc	r22, r18
 69c:	83 9f       	mul	r24, r19
 69e:	a0 0d       	add	r26, r0
 6a0:	61 1d       	adc	r22, r1
 6a2:	22 1f       	adc	r18, r18
 6a4:	74 9f       	mul	r23, r20
 6a6:	33 27       	eor	r19, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	23 1f       	adc	r18, r19
 6ae:	84 9f       	mul	r24, r20
 6b0:	60 0d       	add	r22, r0
 6b2:	21 1d       	adc	r18, r1
 6b4:	82 2f       	mov	r24, r18
 6b6:	76 2f       	mov	r23, r22
 6b8:	6a 2f       	mov	r22, r26
 6ba:	11 24       	eor	r1, r1
 6bc:	9f 57       	subi	r25, 0x7F	; 127
 6be:	50 40       	sbci	r21, 0x00	; 0
 6c0:	9a f0       	brmi	.+38     	; 0x6e8 <__mulsf3_pse+0x88>
 6c2:	f1 f0       	breq	.+60     	; 0x700 <__mulsf3_pse+0xa0>
 6c4:	88 23       	and	r24, r24
 6c6:	4a f0       	brmi	.+18     	; 0x6da <__mulsf3_pse+0x7a>
 6c8:	ee 0f       	add	r30, r30
 6ca:	ff 1f       	adc	r31, r31
 6cc:	bb 1f       	adc	r27, r27
 6ce:	66 1f       	adc	r22, r22
 6d0:	77 1f       	adc	r23, r23
 6d2:	88 1f       	adc	r24, r24
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	50 40       	sbci	r21, 0x00	; 0
 6d8:	a9 f7       	brne	.-22     	; 0x6c4 <__mulsf3_pse+0x64>
 6da:	9e 3f       	cpi	r25, 0xFE	; 254
 6dc:	51 05       	cpc	r21, r1
 6de:	80 f0       	brcs	.+32     	; 0x700 <__mulsf3_pse+0xa0>
 6e0:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_inf>
 6e4:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 6e8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ea:	e4 f3       	brlt	.-8      	; 0x6e4 <__mulsf3_pse+0x84>
 6ec:	98 3e       	cpi	r25, 0xE8	; 232
 6ee:	d4 f3       	brlt	.-12     	; 0x6e4 <__mulsf3_pse+0x84>
 6f0:	86 95       	lsr	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	e7 95       	ror	r30
 6fc:	9f 5f       	subi	r25, 0xFF	; 255
 6fe:	c1 f7       	brne	.-16     	; 0x6f0 <__mulsf3_pse+0x90>
 700:	fe 2b       	or	r31, r30
 702:	88 0f       	add	r24, r24
 704:	91 1d       	adc	r25, r1
 706:	96 95       	lsr	r25
 708:	87 95       	ror	r24
 70a:	97 f9       	bld	r25, 7
 70c:	08 95       	ret

0000070e <__fp_inf>:
 70e:	97 f9       	bld	r25, 7
 710:	9f 67       	ori	r25, 0x7F	; 127
 712:	80 e8       	ldi	r24, 0x80	; 128
 714:	70 e0       	ldi	r23, 0x00	; 0
 716:	60 e0       	ldi	r22, 0x00	; 0
 718:	08 95       	ret

0000071a <__fp_nan>:
 71a:	9f ef       	ldi	r25, 0xFF	; 255
 71c:	80 ec       	ldi	r24, 0xC0	; 192
 71e:	08 95       	ret

00000720 <__fp_pscA>:
 720:	00 24       	eor	r0, r0
 722:	0a 94       	dec	r0
 724:	16 16       	cp	r1, r22
 726:	17 06       	cpc	r1, r23
 728:	18 06       	cpc	r1, r24
 72a:	09 06       	cpc	r0, r25
 72c:	08 95       	ret

0000072e <__fp_pscB>:
 72e:	00 24       	eor	r0, r0
 730:	0a 94       	dec	r0
 732:	12 16       	cp	r1, r18
 734:	13 06       	cpc	r1, r19
 736:	14 06       	cpc	r1, r20
 738:	05 06       	cpc	r0, r21
 73a:	08 95       	ret

0000073c <__fp_round>:
 73c:	09 2e       	mov	r0, r25
 73e:	03 94       	inc	r0
 740:	00 0c       	add	r0, r0
 742:	11 f4       	brne	.+4      	; 0x748 <__fp_round+0xc>
 744:	88 23       	and	r24, r24
 746:	52 f0       	brmi	.+20     	; 0x75c <__fp_round+0x20>
 748:	bb 0f       	add	r27, r27
 74a:	40 f4       	brcc	.+16     	; 0x75c <__fp_round+0x20>
 74c:	bf 2b       	or	r27, r31
 74e:	11 f4       	brne	.+4      	; 0x754 <__fp_round+0x18>
 750:	60 ff       	sbrs	r22, 0
 752:	04 c0       	rjmp	.+8      	; 0x75c <__fp_round+0x20>
 754:	6f 5f       	subi	r22, 0xFF	; 255
 756:	7f 4f       	sbci	r23, 0xFF	; 255
 758:	8f 4f       	sbci	r24, 0xFF	; 255
 75a:	9f 4f       	sbci	r25, 0xFF	; 255
 75c:	08 95       	ret

0000075e <sprintf>:
 75e:	ae e0       	ldi	r26, 0x0E	; 14
 760:	b0 e0       	ldi	r27, 0x00	; 0
 762:	e5 eb       	ldi	r30, 0xB5	; 181
 764:	f3 e0       	ldi	r31, 0x03	; 3
 766:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__prologue_saves__+0x1c>
 76a:	0d 89       	ldd	r16, Y+21	; 0x15
 76c:	1e 89       	ldd	r17, Y+22	; 0x16
 76e:	86 e0       	ldi	r24, 0x06	; 6
 770:	8c 83       	std	Y+4, r24	; 0x04
 772:	1a 83       	std	Y+2, r17	; 0x02
 774:	09 83       	std	Y+1, r16	; 0x01
 776:	8f ef       	ldi	r24, 0xFF	; 255
 778:	9f e7       	ldi	r25, 0x7F	; 127
 77a:	9e 83       	std	Y+6, r25	; 0x06
 77c:	8d 83       	std	Y+5, r24	; 0x05
 77e:	ae 01       	movw	r20, r28
 780:	47 5e       	subi	r20, 0xE7	; 231
 782:	5f 4f       	sbci	r21, 0xFF	; 255
 784:	6f 89       	ldd	r22, Y+23	; 0x17
 786:	78 8d       	ldd	r23, Y+24	; 0x18
 788:	ce 01       	movw	r24, r28
 78a:	01 96       	adiw	r24, 0x01	; 1
 78c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <vfprintf>
 790:	ef 81       	ldd	r30, Y+7	; 0x07
 792:	f8 85       	ldd	r31, Y+8	; 0x08
 794:	e0 0f       	add	r30, r16
 796:	f1 1f       	adc	r31, r17
 798:	10 82       	st	Z, r1
 79a:	2e 96       	adiw	r28, 0x0e	; 14
 79c:	e4 e0       	ldi	r30, 0x04	; 4
 79e:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__epilogue_restores__+0x1c>

000007a2 <vfprintf>:
 7a2:	ab e0       	ldi	r26, 0x0B	; 11
 7a4:	b0 e0       	ldi	r27, 0x00	; 0
 7a6:	e7 ed       	ldi	r30, 0xD7	; 215
 7a8:	f3 e0       	ldi	r31, 0x03	; 3
 7aa:	0c 94 62 06 	jmp	0xcc4	; 0xcc4 <__prologue_saves__>
 7ae:	6c 01       	movw	r12, r24
 7b0:	7b 01       	movw	r14, r22
 7b2:	8a 01       	movw	r16, r20
 7b4:	fc 01       	movw	r30, r24
 7b6:	17 82       	std	Z+7, r1	; 0x07
 7b8:	16 82       	std	Z+6, r1	; 0x06
 7ba:	83 81       	ldd	r24, Z+3	; 0x03
 7bc:	81 ff       	sbrs	r24, 1
 7be:	cc c1       	rjmp	.+920    	; 0xb58 <vfprintf+0x3b6>
 7c0:	ce 01       	movw	r24, r28
 7c2:	01 96       	adiw	r24, 0x01	; 1
 7c4:	3c 01       	movw	r6, r24
 7c6:	f6 01       	movw	r30, r12
 7c8:	93 81       	ldd	r25, Z+3	; 0x03
 7ca:	f7 01       	movw	r30, r14
 7cc:	93 fd       	sbrc	r25, 3
 7ce:	85 91       	lpm	r24, Z+
 7d0:	93 ff       	sbrs	r25, 3
 7d2:	81 91       	ld	r24, Z+
 7d4:	7f 01       	movw	r14, r30
 7d6:	88 23       	and	r24, r24
 7d8:	09 f4       	brne	.+2      	; 0x7dc <vfprintf+0x3a>
 7da:	ba c1       	rjmp	.+884    	; 0xb50 <vfprintf+0x3ae>
 7dc:	85 32       	cpi	r24, 0x25	; 37
 7de:	39 f4       	brne	.+14     	; 0x7ee <vfprintf+0x4c>
 7e0:	93 fd       	sbrc	r25, 3
 7e2:	85 91       	lpm	r24, Z+
 7e4:	93 ff       	sbrs	r25, 3
 7e6:	81 91       	ld	r24, Z+
 7e8:	7f 01       	movw	r14, r30
 7ea:	85 32       	cpi	r24, 0x25	; 37
 7ec:	29 f4       	brne	.+10     	; 0x7f8 <vfprintf+0x56>
 7ee:	b6 01       	movw	r22, r12
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 7f6:	e7 cf       	rjmp	.-50     	; 0x7c6 <vfprintf+0x24>
 7f8:	91 2c       	mov	r9, r1
 7fa:	21 2c       	mov	r2, r1
 7fc:	31 2c       	mov	r3, r1
 7fe:	ff e1       	ldi	r31, 0x1F	; 31
 800:	f3 15       	cp	r31, r3
 802:	d8 f0       	brcs	.+54     	; 0x83a <vfprintf+0x98>
 804:	8b 32       	cpi	r24, 0x2B	; 43
 806:	79 f0       	breq	.+30     	; 0x826 <vfprintf+0x84>
 808:	38 f4       	brcc	.+14     	; 0x818 <vfprintf+0x76>
 80a:	80 32       	cpi	r24, 0x20	; 32
 80c:	79 f0       	breq	.+30     	; 0x82c <vfprintf+0x8a>
 80e:	83 32       	cpi	r24, 0x23	; 35
 810:	a1 f4       	brne	.+40     	; 0x83a <vfprintf+0x98>
 812:	23 2d       	mov	r18, r3
 814:	20 61       	ori	r18, 0x10	; 16
 816:	1d c0       	rjmp	.+58     	; 0x852 <vfprintf+0xb0>
 818:	8d 32       	cpi	r24, 0x2D	; 45
 81a:	61 f0       	breq	.+24     	; 0x834 <vfprintf+0x92>
 81c:	80 33       	cpi	r24, 0x30	; 48
 81e:	69 f4       	brne	.+26     	; 0x83a <vfprintf+0x98>
 820:	23 2d       	mov	r18, r3
 822:	21 60       	ori	r18, 0x01	; 1
 824:	16 c0       	rjmp	.+44     	; 0x852 <vfprintf+0xb0>
 826:	83 2d       	mov	r24, r3
 828:	82 60       	ori	r24, 0x02	; 2
 82a:	38 2e       	mov	r3, r24
 82c:	e3 2d       	mov	r30, r3
 82e:	e4 60       	ori	r30, 0x04	; 4
 830:	3e 2e       	mov	r3, r30
 832:	2a c0       	rjmp	.+84     	; 0x888 <vfprintf+0xe6>
 834:	f3 2d       	mov	r31, r3
 836:	f8 60       	ori	r31, 0x08	; 8
 838:	1d c0       	rjmp	.+58     	; 0x874 <vfprintf+0xd2>
 83a:	37 fc       	sbrc	r3, 7
 83c:	2d c0       	rjmp	.+90     	; 0x898 <vfprintf+0xf6>
 83e:	20 ed       	ldi	r18, 0xD0	; 208
 840:	28 0f       	add	r18, r24
 842:	2a 30       	cpi	r18, 0x0A	; 10
 844:	40 f0       	brcs	.+16     	; 0x856 <vfprintf+0xb4>
 846:	8e 32       	cpi	r24, 0x2E	; 46
 848:	b9 f4       	brne	.+46     	; 0x878 <vfprintf+0xd6>
 84a:	36 fc       	sbrc	r3, 6
 84c:	81 c1       	rjmp	.+770    	; 0xb50 <vfprintf+0x3ae>
 84e:	23 2d       	mov	r18, r3
 850:	20 64       	ori	r18, 0x40	; 64
 852:	32 2e       	mov	r3, r18
 854:	19 c0       	rjmp	.+50     	; 0x888 <vfprintf+0xe6>
 856:	36 fe       	sbrs	r3, 6
 858:	06 c0       	rjmp	.+12     	; 0x866 <vfprintf+0xc4>
 85a:	8a e0       	ldi	r24, 0x0A	; 10
 85c:	98 9e       	mul	r9, r24
 85e:	20 0d       	add	r18, r0
 860:	11 24       	eor	r1, r1
 862:	92 2e       	mov	r9, r18
 864:	11 c0       	rjmp	.+34     	; 0x888 <vfprintf+0xe6>
 866:	ea e0       	ldi	r30, 0x0A	; 10
 868:	2e 9e       	mul	r2, r30
 86a:	20 0d       	add	r18, r0
 86c:	11 24       	eor	r1, r1
 86e:	22 2e       	mov	r2, r18
 870:	f3 2d       	mov	r31, r3
 872:	f0 62       	ori	r31, 0x20	; 32
 874:	3f 2e       	mov	r3, r31
 876:	08 c0       	rjmp	.+16     	; 0x888 <vfprintf+0xe6>
 878:	8c 36       	cpi	r24, 0x6C	; 108
 87a:	21 f4       	brne	.+8      	; 0x884 <vfprintf+0xe2>
 87c:	83 2d       	mov	r24, r3
 87e:	80 68       	ori	r24, 0x80	; 128
 880:	38 2e       	mov	r3, r24
 882:	02 c0       	rjmp	.+4      	; 0x888 <vfprintf+0xe6>
 884:	88 36       	cpi	r24, 0x68	; 104
 886:	41 f4       	brne	.+16     	; 0x898 <vfprintf+0xf6>
 888:	f7 01       	movw	r30, r14
 88a:	93 fd       	sbrc	r25, 3
 88c:	85 91       	lpm	r24, Z+
 88e:	93 ff       	sbrs	r25, 3
 890:	81 91       	ld	r24, Z+
 892:	7f 01       	movw	r14, r30
 894:	81 11       	cpse	r24, r1
 896:	b3 cf       	rjmp	.-154    	; 0x7fe <vfprintf+0x5c>
 898:	98 2f       	mov	r25, r24
 89a:	9f 7d       	andi	r25, 0xDF	; 223
 89c:	95 54       	subi	r25, 0x45	; 69
 89e:	93 30       	cpi	r25, 0x03	; 3
 8a0:	28 f4       	brcc	.+10     	; 0x8ac <vfprintf+0x10a>
 8a2:	0c 5f       	subi	r16, 0xFC	; 252
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
 8a6:	9f e3       	ldi	r25, 0x3F	; 63
 8a8:	99 83       	std	Y+1, r25	; 0x01
 8aa:	0d c0       	rjmp	.+26     	; 0x8c6 <vfprintf+0x124>
 8ac:	83 36       	cpi	r24, 0x63	; 99
 8ae:	31 f0       	breq	.+12     	; 0x8bc <vfprintf+0x11a>
 8b0:	83 37       	cpi	r24, 0x73	; 115
 8b2:	71 f0       	breq	.+28     	; 0x8d0 <vfprintf+0x12e>
 8b4:	83 35       	cpi	r24, 0x53	; 83
 8b6:	09 f0       	breq	.+2      	; 0x8ba <vfprintf+0x118>
 8b8:	59 c0       	rjmp	.+178    	; 0x96c <vfprintf+0x1ca>
 8ba:	21 c0       	rjmp	.+66     	; 0x8fe <vfprintf+0x15c>
 8bc:	f8 01       	movw	r30, r16
 8be:	80 81       	ld	r24, Z
 8c0:	89 83       	std	Y+1, r24	; 0x01
 8c2:	0e 5f       	subi	r16, 0xFE	; 254
 8c4:	1f 4f       	sbci	r17, 0xFF	; 255
 8c6:	88 24       	eor	r8, r8
 8c8:	83 94       	inc	r8
 8ca:	91 2c       	mov	r9, r1
 8cc:	53 01       	movw	r10, r6
 8ce:	13 c0       	rjmp	.+38     	; 0x8f6 <vfprintf+0x154>
 8d0:	28 01       	movw	r4, r16
 8d2:	f2 e0       	ldi	r31, 0x02	; 2
 8d4:	4f 0e       	add	r4, r31
 8d6:	51 1c       	adc	r5, r1
 8d8:	f8 01       	movw	r30, r16
 8da:	a0 80       	ld	r10, Z
 8dc:	b1 80       	ldd	r11, Z+1	; 0x01
 8de:	36 fe       	sbrs	r3, 6
 8e0:	03 c0       	rjmp	.+6      	; 0x8e8 <vfprintf+0x146>
 8e2:	69 2d       	mov	r22, r9
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <vfprintf+0x14a>
 8e8:	6f ef       	ldi	r22, 0xFF	; 255
 8ea:	7f ef       	ldi	r23, 0xFF	; 255
 8ec:	c5 01       	movw	r24, r10
 8ee:	0e 94 bd 05 	call	0xb7a	; 0xb7a <strnlen>
 8f2:	4c 01       	movw	r8, r24
 8f4:	82 01       	movw	r16, r4
 8f6:	f3 2d       	mov	r31, r3
 8f8:	ff 77       	andi	r31, 0x7F	; 127
 8fa:	3f 2e       	mov	r3, r31
 8fc:	16 c0       	rjmp	.+44     	; 0x92a <vfprintf+0x188>
 8fe:	28 01       	movw	r4, r16
 900:	22 e0       	ldi	r18, 0x02	; 2
 902:	42 0e       	add	r4, r18
 904:	51 1c       	adc	r5, r1
 906:	f8 01       	movw	r30, r16
 908:	a0 80       	ld	r10, Z
 90a:	b1 80       	ldd	r11, Z+1	; 0x01
 90c:	36 fe       	sbrs	r3, 6
 90e:	03 c0       	rjmp	.+6      	; 0x916 <vfprintf+0x174>
 910:	69 2d       	mov	r22, r9
 912:	70 e0       	ldi	r23, 0x00	; 0
 914:	02 c0       	rjmp	.+4      	; 0x91a <vfprintf+0x178>
 916:	6f ef       	ldi	r22, 0xFF	; 255
 918:	7f ef       	ldi	r23, 0xFF	; 255
 91a:	c5 01       	movw	r24, r10
 91c:	0e 94 b2 05 	call	0xb64	; 0xb64 <strnlen_P>
 920:	4c 01       	movw	r8, r24
 922:	f3 2d       	mov	r31, r3
 924:	f0 68       	ori	r31, 0x80	; 128
 926:	3f 2e       	mov	r3, r31
 928:	82 01       	movw	r16, r4
 92a:	33 fc       	sbrc	r3, 3
 92c:	1b c0       	rjmp	.+54     	; 0x964 <vfprintf+0x1c2>
 92e:	82 2d       	mov	r24, r2
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	88 16       	cp	r8, r24
 934:	99 06       	cpc	r9, r25
 936:	b0 f4       	brcc	.+44     	; 0x964 <vfprintf+0x1c2>
 938:	b6 01       	movw	r22, r12
 93a:	80 e2       	ldi	r24, 0x20	; 32
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 942:	2a 94       	dec	r2
 944:	f4 cf       	rjmp	.-24     	; 0x92e <vfprintf+0x18c>
 946:	f5 01       	movw	r30, r10
 948:	37 fc       	sbrc	r3, 7
 94a:	85 91       	lpm	r24, Z+
 94c:	37 fe       	sbrs	r3, 7
 94e:	81 91       	ld	r24, Z+
 950:	5f 01       	movw	r10, r30
 952:	b6 01       	movw	r22, r12
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 95a:	21 10       	cpse	r2, r1
 95c:	2a 94       	dec	r2
 95e:	21 e0       	ldi	r18, 0x01	; 1
 960:	82 1a       	sub	r8, r18
 962:	91 08       	sbc	r9, r1
 964:	81 14       	cp	r8, r1
 966:	91 04       	cpc	r9, r1
 968:	71 f7       	brne	.-36     	; 0x946 <vfprintf+0x1a4>
 96a:	e8 c0       	rjmp	.+464    	; 0xb3c <vfprintf+0x39a>
 96c:	84 36       	cpi	r24, 0x64	; 100
 96e:	11 f0       	breq	.+4      	; 0x974 <vfprintf+0x1d2>
 970:	89 36       	cpi	r24, 0x69	; 105
 972:	41 f5       	brne	.+80     	; 0x9c4 <vfprintf+0x222>
 974:	f8 01       	movw	r30, r16
 976:	37 fe       	sbrs	r3, 7
 978:	07 c0       	rjmp	.+14     	; 0x988 <vfprintf+0x1e6>
 97a:	60 81       	ld	r22, Z
 97c:	71 81       	ldd	r23, Z+1	; 0x01
 97e:	82 81       	ldd	r24, Z+2	; 0x02
 980:	93 81       	ldd	r25, Z+3	; 0x03
 982:	0c 5f       	subi	r16, 0xFC	; 252
 984:	1f 4f       	sbci	r17, 0xFF	; 255
 986:	08 c0       	rjmp	.+16     	; 0x998 <vfprintf+0x1f6>
 988:	60 81       	ld	r22, Z
 98a:	71 81       	ldd	r23, Z+1	; 0x01
 98c:	07 2e       	mov	r0, r23
 98e:	00 0c       	add	r0, r0
 990:	88 0b       	sbc	r24, r24
 992:	99 0b       	sbc	r25, r25
 994:	0e 5f       	subi	r16, 0xFE	; 254
 996:	1f 4f       	sbci	r17, 0xFF	; 255
 998:	f3 2d       	mov	r31, r3
 99a:	ff 76       	andi	r31, 0x6F	; 111
 99c:	3f 2e       	mov	r3, r31
 99e:	97 ff       	sbrs	r25, 7
 9a0:	09 c0       	rjmp	.+18     	; 0x9b4 <vfprintf+0x212>
 9a2:	90 95       	com	r25
 9a4:	80 95       	com	r24
 9a6:	70 95       	com	r23
 9a8:	61 95       	neg	r22
 9aa:	7f 4f       	sbci	r23, 0xFF	; 255
 9ac:	8f 4f       	sbci	r24, 0xFF	; 255
 9ae:	9f 4f       	sbci	r25, 0xFF	; 255
 9b0:	f0 68       	ori	r31, 0x80	; 128
 9b2:	3f 2e       	mov	r3, r31
 9b4:	2a e0       	ldi	r18, 0x0A	; 10
 9b6:	30 e0       	ldi	r19, 0x00	; 0
 9b8:	a3 01       	movw	r20, r6
 9ba:	0e 94 04 06 	call	0xc08	; 0xc08 <__ultoa_invert>
 9be:	88 2e       	mov	r8, r24
 9c0:	86 18       	sub	r8, r6
 9c2:	45 c0       	rjmp	.+138    	; 0xa4e <vfprintf+0x2ac>
 9c4:	85 37       	cpi	r24, 0x75	; 117
 9c6:	31 f4       	brne	.+12     	; 0x9d4 <vfprintf+0x232>
 9c8:	23 2d       	mov	r18, r3
 9ca:	2f 7e       	andi	r18, 0xEF	; 239
 9cc:	b2 2e       	mov	r11, r18
 9ce:	2a e0       	ldi	r18, 0x0A	; 10
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	25 c0       	rjmp	.+74     	; 0xa1e <vfprintf+0x27c>
 9d4:	93 2d       	mov	r25, r3
 9d6:	99 7f       	andi	r25, 0xF9	; 249
 9d8:	b9 2e       	mov	r11, r25
 9da:	8f 36       	cpi	r24, 0x6F	; 111
 9dc:	c1 f0       	breq	.+48     	; 0xa0e <vfprintf+0x26c>
 9de:	18 f4       	brcc	.+6      	; 0x9e6 <vfprintf+0x244>
 9e0:	88 35       	cpi	r24, 0x58	; 88
 9e2:	79 f0       	breq	.+30     	; 0xa02 <vfprintf+0x260>
 9e4:	b5 c0       	rjmp	.+362    	; 0xb50 <vfprintf+0x3ae>
 9e6:	80 37       	cpi	r24, 0x70	; 112
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <vfprintf+0x24e>
 9ea:	88 37       	cpi	r24, 0x78	; 120
 9ec:	21 f0       	breq	.+8      	; 0x9f6 <vfprintf+0x254>
 9ee:	b0 c0       	rjmp	.+352    	; 0xb50 <vfprintf+0x3ae>
 9f0:	e9 2f       	mov	r30, r25
 9f2:	e0 61       	ori	r30, 0x10	; 16
 9f4:	be 2e       	mov	r11, r30
 9f6:	b4 fe       	sbrs	r11, 4
 9f8:	0d c0       	rjmp	.+26     	; 0xa14 <vfprintf+0x272>
 9fa:	fb 2d       	mov	r31, r11
 9fc:	f4 60       	ori	r31, 0x04	; 4
 9fe:	bf 2e       	mov	r11, r31
 a00:	09 c0       	rjmp	.+18     	; 0xa14 <vfprintf+0x272>
 a02:	34 fe       	sbrs	r3, 4
 a04:	0a c0       	rjmp	.+20     	; 0xa1a <vfprintf+0x278>
 a06:	29 2f       	mov	r18, r25
 a08:	26 60       	ori	r18, 0x06	; 6
 a0a:	b2 2e       	mov	r11, r18
 a0c:	06 c0       	rjmp	.+12     	; 0xa1a <vfprintf+0x278>
 a0e:	28 e0       	ldi	r18, 0x08	; 8
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	05 c0       	rjmp	.+10     	; 0xa1e <vfprintf+0x27c>
 a14:	20 e1       	ldi	r18, 0x10	; 16
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <vfprintf+0x27c>
 a1a:	20 e1       	ldi	r18, 0x10	; 16
 a1c:	32 e0       	ldi	r19, 0x02	; 2
 a1e:	f8 01       	movw	r30, r16
 a20:	b7 fe       	sbrs	r11, 7
 a22:	07 c0       	rjmp	.+14     	; 0xa32 <vfprintf+0x290>
 a24:	60 81       	ld	r22, Z
 a26:	71 81       	ldd	r23, Z+1	; 0x01
 a28:	82 81       	ldd	r24, Z+2	; 0x02
 a2a:	93 81       	ldd	r25, Z+3	; 0x03
 a2c:	0c 5f       	subi	r16, 0xFC	; 252
 a2e:	1f 4f       	sbci	r17, 0xFF	; 255
 a30:	06 c0       	rjmp	.+12     	; 0xa3e <vfprintf+0x29c>
 a32:	60 81       	ld	r22, Z
 a34:	71 81       	ldd	r23, Z+1	; 0x01
 a36:	80 e0       	ldi	r24, 0x00	; 0
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 5f       	subi	r16, 0xFE	; 254
 a3c:	1f 4f       	sbci	r17, 0xFF	; 255
 a3e:	a3 01       	movw	r20, r6
 a40:	0e 94 04 06 	call	0xc08	; 0xc08 <__ultoa_invert>
 a44:	88 2e       	mov	r8, r24
 a46:	86 18       	sub	r8, r6
 a48:	fb 2d       	mov	r31, r11
 a4a:	ff 77       	andi	r31, 0x7F	; 127
 a4c:	3f 2e       	mov	r3, r31
 a4e:	36 fe       	sbrs	r3, 6
 a50:	0d c0       	rjmp	.+26     	; 0xa6c <vfprintf+0x2ca>
 a52:	23 2d       	mov	r18, r3
 a54:	2e 7f       	andi	r18, 0xFE	; 254
 a56:	a2 2e       	mov	r10, r18
 a58:	89 14       	cp	r8, r9
 a5a:	58 f4       	brcc	.+22     	; 0xa72 <vfprintf+0x2d0>
 a5c:	34 fe       	sbrs	r3, 4
 a5e:	0b c0       	rjmp	.+22     	; 0xa76 <vfprintf+0x2d4>
 a60:	32 fc       	sbrc	r3, 2
 a62:	09 c0       	rjmp	.+18     	; 0xa76 <vfprintf+0x2d4>
 a64:	83 2d       	mov	r24, r3
 a66:	8e 7e       	andi	r24, 0xEE	; 238
 a68:	a8 2e       	mov	r10, r24
 a6a:	05 c0       	rjmp	.+10     	; 0xa76 <vfprintf+0x2d4>
 a6c:	b8 2c       	mov	r11, r8
 a6e:	a3 2c       	mov	r10, r3
 a70:	03 c0       	rjmp	.+6      	; 0xa78 <vfprintf+0x2d6>
 a72:	b8 2c       	mov	r11, r8
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <vfprintf+0x2d6>
 a76:	b9 2c       	mov	r11, r9
 a78:	a4 fe       	sbrs	r10, 4
 a7a:	0f c0       	rjmp	.+30     	; 0xa9a <vfprintf+0x2f8>
 a7c:	fe 01       	movw	r30, r28
 a7e:	e8 0d       	add	r30, r8
 a80:	f1 1d       	adc	r31, r1
 a82:	80 81       	ld	r24, Z
 a84:	80 33       	cpi	r24, 0x30	; 48
 a86:	21 f4       	brne	.+8      	; 0xa90 <vfprintf+0x2ee>
 a88:	9a 2d       	mov	r25, r10
 a8a:	99 7e       	andi	r25, 0xE9	; 233
 a8c:	a9 2e       	mov	r10, r25
 a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <vfprintf+0x300>
 a90:	a2 fe       	sbrs	r10, 2
 a92:	06 c0       	rjmp	.+12     	; 0xaa0 <vfprintf+0x2fe>
 a94:	b3 94       	inc	r11
 a96:	b3 94       	inc	r11
 a98:	04 c0       	rjmp	.+8      	; 0xaa2 <vfprintf+0x300>
 a9a:	8a 2d       	mov	r24, r10
 a9c:	86 78       	andi	r24, 0x86	; 134
 a9e:	09 f0       	breq	.+2      	; 0xaa2 <vfprintf+0x300>
 aa0:	b3 94       	inc	r11
 aa2:	a3 fc       	sbrc	r10, 3
 aa4:	11 c0       	rjmp	.+34     	; 0xac8 <vfprintf+0x326>
 aa6:	a0 fe       	sbrs	r10, 0
 aa8:	06 c0       	rjmp	.+12     	; 0xab6 <vfprintf+0x314>
 aaa:	b2 14       	cp	r11, r2
 aac:	88 f4       	brcc	.+34     	; 0xad0 <vfprintf+0x32e>
 aae:	28 0c       	add	r2, r8
 ab0:	92 2c       	mov	r9, r2
 ab2:	9b 18       	sub	r9, r11
 ab4:	0e c0       	rjmp	.+28     	; 0xad2 <vfprintf+0x330>
 ab6:	b2 14       	cp	r11, r2
 ab8:	60 f4       	brcc	.+24     	; 0xad2 <vfprintf+0x330>
 aba:	b6 01       	movw	r22, r12
 abc:	80 e2       	ldi	r24, 0x20	; 32
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 ac4:	b3 94       	inc	r11
 ac6:	f7 cf       	rjmp	.-18     	; 0xab6 <vfprintf+0x314>
 ac8:	b2 14       	cp	r11, r2
 aca:	18 f4       	brcc	.+6      	; 0xad2 <vfprintf+0x330>
 acc:	2b 18       	sub	r2, r11
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <vfprintf+0x332>
 ad0:	98 2c       	mov	r9, r8
 ad2:	21 2c       	mov	r2, r1
 ad4:	a4 fe       	sbrs	r10, 4
 ad6:	10 c0       	rjmp	.+32     	; 0xaf8 <vfprintf+0x356>
 ad8:	b6 01       	movw	r22, r12
 ada:	80 e3       	ldi	r24, 0x30	; 48
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 ae2:	a2 fe       	sbrs	r10, 2
 ae4:	17 c0       	rjmp	.+46     	; 0xb14 <vfprintf+0x372>
 ae6:	a1 fc       	sbrc	r10, 1
 ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <vfprintf+0x34e>
 aea:	88 e7       	ldi	r24, 0x78	; 120
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <vfprintf+0x352>
 af0:	88 e5       	ldi	r24, 0x58	; 88
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	b6 01       	movw	r22, r12
 af6:	0c c0       	rjmp	.+24     	; 0xb10 <vfprintf+0x36e>
 af8:	8a 2d       	mov	r24, r10
 afa:	86 78       	andi	r24, 0x86	; 134
 afc:	59 f0       	breq	.+22     	; 0xb14 <vfprintf+0x372>
 afe:	a1 fe       	sbrs	r10, 1
 b00:	02 c0       	rjmp	.+4      	; 0xb06 <vfprintf+0x364>
 b02:	8b e2       	ldi	r24, 0x2B	; 43
 b04:	01 c0       	rjmp	.+2      	; 0xb08 <vfprintf+0x366>
 b06:	80 e2       	ldi	r24, 0x20	; 32
 b08:	a7 fc       	sbrc	r10, 7
 b0a:	8d e2       	ldi	r24, 0x2D	; 45
 b0c:	b6 01       	movw	r22, r12
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 b14:	89 14       	cp	r8, r9
 b16:	38 f4       	brcc	.+14     	; 0xb26 <vfprintf+0x384>
 b18:	b6 01       	movw	r22, r12
 b1a:	80 e3       	ldi	r24, 0x30	; 48
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 b22:	9a 94       	dec	r9
 b24:	f7 cf       	rjmp	.-18     	; 0xb14 <vfprintf+0x372>
 b26:	8a 94       	dec	r8
 b28:	f3 01       	movw	r30, r6
 b2a:	e8 0d       	add	r30, r8
 b2c:	f1 1d       	adc	r31, r1
 b2e:	80 81       	ld	r24, Z
 b30:	b6 01       	movw	r22, r12
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 b38:	81 10       	cpse	r8, r1
 b3a:	f5 cf       	rjmp	.-22     	; 0xb26 <vfprintf+0x384>
 b3c:	22 20       	and	r2, r2
 b3e:	09 f4       	brne	.+2      	; 0xb42 <vfprintf+0x3a0>
 b40:	42 ce       	rjmp	.-892    	; 0x7c6 <vfprintf+0x24>
 b42:	b6 01       	movw	r22, r12
 b44:	80 e2       	ldi	r24, 0x20	; 32
 b46:	90 e0       	ldi	r25, 0x00	; 0
 b48:	0e 94 c8 05 	call	0xb90	; 0xb90 <fputc>
 b4c:	2a 94       	dec	r2
 b4e:	f6 cf       	rjmp	.-20     	; 0xb3c <vfprintf+0x39a>
 b50:	f6 01       	movw	r30, r12
 b52:	86 81       	ldd	r24, Z+6	; 0x06
 b54:	97 81       	ldd	r25, Z+7	; 0x07
 b56:	02 c0       	rjmp	.+4      	; 0xb5c <vfprintf+0x3ba>
 b58:	8f ef       	ldi	r24, 0xFF	; 255
 b5a:	9f ef       	ldi	r25, 0xFF	; 255
 b5c:	2b 96       	adiw	r28, 0x0b	; 11
 b5e:	e2 e1       	ldi	r30, 0x12	; 18
 b60:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__epilogue_restores__>

00000b64 <strnlen_P>:
 b64:	fc 01       	movw	r30, r24
 b66:	05 90       	lpm	r0, Z+
 b68:	61 50       	subi	r22, 0x01	; 1
 b6a:	70 40       	sbci	r23, 0x00	; 0
 b6c:	01 10       	cpse	r0, r1
 b6e:	d8 f7       	brcc	.-10     	; 0xb66 <strnlen_P+0x2>
 b70:	80 95       	com	r24
 b72:	90 95       	com	r25
 b74:	8e 0f       	add	r24, r30
 b76:	9f 1f       	adc	r25, r31
 b78:	08 95       	ret

00000b7a <strnlen>:
 b7a:	fc 01       	movw	r30, r24
 b7c:	61 50       	subi	r22, 0x01	; 1
 b7e:	70 40       	sbci	r23, 0x00	; 0
 b80:	01 90       	ld	r0, Z+
 b82:	01 10       	cpse	r0, r1
 b84:	d8 f7       	brcc	.-10     	; 0xb7c <strnlen+0x2>
 b86:	80 95       	com	r24
 b88:	90 95       	com	r25
 b8a:	8e 0f       	add	r24, r30
 b8c:	9f 1f       	adc	r25, r31
 b8e:	08 95       	ret

00000b90 <fputc>:
 b90:	0f 93       	push	r16
 b92:	1f 93       	push	r17
 b94:	cf 93       	push	r28
 b96:	df 93       	push	r29
 b98:	fb 01       	movw	r30, r22
 b9a:	23 81       	ldd	r18, Z+3	; 0x03
 b9c:	21 fd       	sbrc	r18, 1
 b9e:	03 c0       	rjmp	.+6      	; 0xba6 <fputc+0x16>
 ba0:	8f ef       	ldi	r24, 0xFF	; 255
 ba2:	9f ef       	ldi	r25, 0xFF	; 255
 ba4:	2c c0       	rjmp	.+88     	; 0xbfe <fputc+0x6e>
 ba6:	22 ff       	sbrs	r18, 2
 ba8:	16 c0       	rjmp	.+44     	; 0xbd6 <fputc+0x46>
 baa:	46 81       	ldd	r20, Z+6	; 0x06
 bac:	57 81       	ldd	r21, Z+7	; 0x07
 bae:	24 81       	ldd	r18, Z+4	; 0x04
 bb0:	35 81       	ldd	r19, Z+5	; 0x05
 bb2:	42 17       	cp	r20, r18
 bb4:	53 07       	cpc	r21, r19
 bb6:	44 f4       	brge	.+16     	; 0xbc8 <fputc+0x38>
 bb8:	a0 81       	ld	r26, Z
 bba:	b1 81       	ldd	r27, Z+1	; 0x01
 bbc:	9d 01       	movw	r18, r26
 bbe:	2f 5f       	subi	r18, 0xFF	; 255
 bc0:	3f 4f       	sbci	r19, 0xFF	; 255
 bc2:	31 83       	std	Z+1, r19	; 0x01
 bc4:	20 83       	st	Z, r18
 bc6:	8c 93       	st	X, r24
 bc8:	26 81       	ldd	r18, Z+6	; 0x06
 bca:	37 81       	ldd	r19, Z+7	; 0x07
 bcc:	2f 5f       	subi	r18, 0xFF	; 255
 bce:	3f 4f       	sbci	r19, 0xFF	; 255
 bd0:	37 83       	std	Z+7, r19	; 0x07
 bd2:	26 83       	std	Z+6, r18	; 0x06
 bd4:	14 c0       	rjmp	.+40     	; 0xbfe <fputc+0x6e>
 bd6:	8b 01       	movw	r16, r22
 bd8:	ec 01       	movw	r28, r24
 bda:	fb 01       	movw	r30, r22
 bdc:	00 84       	ldd	r0, Z+8	; 0x08
 bde:	f1 85       	ldd	r31, Z+9	; 0x09
 be0:	e0 2d       	mov	r30, r0
 be2:	09 95       	icall
 be4:	89 2b       	or	r24, r25
 be6:	e1 f6       	brne	.-72     	; 0xba0 <fputc+0x10>
 be8:	d8 01       	movw	r26, r16
 bea:	16 96       	adiw	r26, 0x06	; 6
 bec:	8d 91       	ld	r24, X+
 bee:	9c 91       	ld	r25, X
 bf0:	17 97       	sbiw	r26, 0x07	; 7
 bf2:	01 96       	adiw	r24, 0x01	; 1
 bf4:	17 96       	adiw	r26, 0x07	; 7
 bf6:	9c 93       	st	X, r25
 bf8:	8e 93       	st	-X, r24
 bfa:	16 97       	sbiw	r26, 0x06	; 6
 bfc:	ce 01       	movw	r24, r28
 bfe:	df 91       	pop	r29
 c00:	cf 91       	pop	r28
 c02:	1f 91       	pop	r17
 c04:	0f 91       	pop	r16
 c06:	08 95       	ret

00000c08 <__ultoa_invert>:
 c08:	fa 01       	movw	r30, r20
 c0a:	aa 27       	eor	r26, r26
 c0c:	28 30       	cpi	r18, 0x08	; 8
 c0e:	51 f1       	breq	.+84     	; 0xc64 <__ultoa_invert+0x5c>
 c10:	20 31       	cpi	r18, 0x10	; 16
 c12:	81 f1       	breq	.+96     	; 0xc74 <__ultoa_invert+0x6c>
 c14:	e8 94       	clt
 c16:	6f 93       	push	r22
 c18:	6e 7f       	andi	r22, 0xFE	; 254
 c1a:	6e 5f       	subi	r22, 0xFE	; 254
 c1c:	7f 4f       	sbci	r23, 0xFF	; 255
 c1e:	8f 4f       	sbci	r24, 0xFF	; 255
 c20:	9f 4f       	sbci	r25, 0xFF	; 255
 c22:	af 4f       	sbci	r26, 0xFF	; 255
 c24:	b1 e0       	ldi	r27, 0x01	; 1
 c26:	3e d0       	rcall	.+124    	; 0xca4 <__ultoa_invert+0x9c>
 c28:	b4 e0       	ldi	r27, 0x04	; 4
 c2a:	3c d0       	rcall	.+120    	; 0xca4 <__ultoa_invert+0x9c>
 c2c:	67 0f       	add	r22, r23
 c2e:	78 1f       	adc	r23, r24
 c30:	89 1f       	adc	r24, r25
 c32:	9a 1f       	adc	r25, r26
 c34:	a1 1d       	adc	r26, r1
 c36:	68 0f       	add	r22, r24
 c38:	79 1f       	adc	r23, r25
 c3a:	8a 1f       	adc	r24, r26
 c3c:	91 1d       	adc	r25, r1
 c3e:	a1 1d       	adc	r26, r1
 c40:	6a 0f       	add	r22, r26
 c42:	71 1d       	adc	r23, r1
 c44:	81 1d       	adc	r24, r1
 c46:	91 1d       	adc	r25, r1
 c48:	a1 1d       	adc	r26, r1
 c4a:	20 d0       	rcall	.+64     	; 0xc8c <__ultoa_invert+0x84>
 c4c:	09 f4       	brne	.+2      	; 0xc50 <__ultoa_invert+0x48>
 c4e:	68 94       	set
 c50:	3f 91       	pop	r19
 c52:	2a e0       	ldi	r18, 0x0A	; 10
 c54:	26 9f       	mul	r18, r22
 c56:	11 24       	eor	r1, r1
 c58:	30 19       	sub	r19, r0
 c5a:	30 5d       	subi	r19, 0xD0	; 208
 c5c:	31 93       	st	Z+, r19
 c5e:	de f6       	brtc	.-74     	; 0xc16 <__ultoa_invert+0xe>
 c60:	cf 01       	movw	r24, r30
 c62:	08 95       	ret
 c64:	46 2f       	mov	r20, r22
 c66:	47 70       	andi	r20, 0x07	; 7
 c68:	40 5d       	subi	r20, 0xD0	; 208
 c6a:	41 93       	st	Z+, r20
 c6c:	b3 e0       	ldi	r27, 0x03	; 3
 c6e:	0f d0       	rcall	.+30     	; 0xc8e <__ultoa_invert+0x86>
 c70:	c9 f7       	brne	.-14     	; 0xc64 <__ultoa_invert+0x5c>
 c72:	f6 cf       	rjmp	.-20     	; 0xc60 <__ultoa_invert+0x58>
 c74:	46 2f       	mov	r20, r22
 c76:	4f 70       	andi	r20, 0x0F	; 15
 c78:	40 5d       	subi	r20, 0xD0	; 208
 c7a:	4a 33       	cpi	r20, 0x3A	; 58
 c7c:	18 f0       	brcs	.+6      	; 0xc84 <__ultoa_invert+0x7c>
 c7e:	49 5d       	subi	r20, 0xD9	; 217
 c80:	31 fd       	sbrc	r19, 1
 c82:	40 52       	subi	r20, 0x20	; 32
 c84:	41 93       	st	Z+, r20
 c86:	02 d0       	rcall	.+4      	; 0xc8c <__ultoa_invert+0x84>
 c88:	a9 f7       	brne	.-22     	; 0xc74 <__ultoa_invert+0x6c>
 c8a:	ea cf       	rjmp	.-44     	; 0xc60 <__ultoa_invert+0x58>
 c8c:	b4 e0       	ldi	r27, 0x04	; 4
 c8e:	a6 95       	lsr	r26
 c90:	97 95       	ror	r25
 c92:	87 95       	ror	r24
 c94:	77 95       	ror	r23
 c96:	67 95       	ror	r22
 c98:	ba 95       	dec	r27
 c9a:	c9 f7       	brne	.-14     	; 0xc8e <__ultoa_invert+0x86>
 c9c:	00 97       	sbiw	r24, 0x00	; 0
 c9e:	61 05       	cpc	r22, r1
 ca0:	71 05       	cpc	r23, r1
 ca2:	08 95       	ret
 ca4:	9b 01       	movw	r18, r22
 ca6:	ac 01       	movw	r20, r24
 ca8:	0a 2e       	mov	r0, r26
 caa:	06 94       	lsr	r0
 cac:	57 95       	ror	r21
 cae:	47 95       	ror	r20
 cb0:	37 95       	ror	r19
 cb2:	27 95       	ror	r18
 cb4:	ba 95       	dec	r27
 cb6:	c9 f7       	brne	.-14     	; 0xcaa <__ultoa_invert+0xa2>
 cb8:	62 0f       	add	r22, r18
 cba:	73 1f       	adc	r23, r19
 cbc:	84 1f       	adc	r24, r20
 cbe:	95 1f       	adc	r25, r21
 cc0:	a0 1d       	adc	r26, r0
 cc2:	08 95       	ret

00000cc4 <__prologue_saves__>:
 cc4:	2f 92       	push	r2
 cc6:	3f 92       	push	r3
 cc8:	4f 92       	push	r4
 cca:	5f 92       	push	r5
 ccc:	6f 92       	push	r6
 cce:	7f 92       	push	r7
 cd0:	8f 92       	push	r8
 cd2:	9f 92       	push	r9
 cd4:	af 92       	push	r10
 cd6:	bf 92       	push	r11
 cd8:	cf 92       	push	r12
 cda:	df 92       	push	r13
 cdc:	ef 92       	push	r14
 cde:	ff 92       	push	r15
 ce0:	0f 93       	push	r16
 ce2:	1f 93       	push	r17
 ce4:	cf 93       	push	r28
 ce6:	df 93       	push	r29
 ce8:	cd b7       	in	r28, 0x3d	; 61
 cea:	de b7       	in	r29, 0x3e	; 62
 cec:	ca 1b       	sub	r28, r26
 cee:	db 0b       	sbc	r29, r27
 cf0:	0f b6       	in	r0, 0x3f	; 63
 cf2:	f8 94       	cli
 cf4:	de bf       	out	0x3e, r29	; 62
 cf6:	0f be       	out	0x3f, r0	; 63
 cf8:	cd bf       	out	0x3d, r28	; 61
 cfa:	09 94       	ijmp

00000cfc <__epilogue_restores__>:
 cfc:	2a 88       	ldd	r2, Y+18	; 0x12
 cfe:	39 88       	ldd	r3, Y+17	; 0x11
 d00:	48 88       	ldd	r4, Y+16	; 0x10
 d02:	5f 84       	ldd	r5, Y+15	; 0x0f
 d04:	6e 84       	ldd	r6, Y+14	; 0x0e
 d06:	7d 84       	ldd	r7, Y+13	; 0x0d
 d08:	8c 84       	ldd	r8, Y+12	; 0x0c
 d0a:	9b 84       	ldd	r9, Y+11	; 0x0b
 d0c:	aa 84       	ldd	r10, Y+10	; 0x0a
 d0e:	b9 84       	ldd	r11, Y+9	; 0x09
 d10:	c8 84       	ldd	r12, Y+8	; 0x08
 d12:	df 80       	ldd	r13, Y+7	; 0x07
 d14:	ee 80       	ldd	r14, Y+6	; 0x06
 d16:	fd 80       	ldd	r15, Y+5	; 0x05
 d18:	0c 81       	ldd	r16, Y+4	; 0x04
 d1a:	1b 81       	ldd	r17, Y+3	; 0x03
 d1c:	aa 81       	ldd	r26, Y+2	; 0x02
 d1e:	b9 81       	ldd	r27, Y+1	; 0x01
 d20:	ce 0f       	add	r28, r30
 d22:	d1 1d       	adc	r29, r1
 d24:	0f b6       	in	r0, 0x3f	; 63
 d26:	f8 94       	cli
 d28:	de bf       	out	0x3e, r29	; 62
 d2a:	0f be       	out	0x3f, r0	; 63
 d2c:	cd bf       	out	0x3d, r28	; 61
 d2e:	ed 01       	movw	r28, r26
 d30:	08 95       	ret

00000d32 <_exit>:
 d32:	f8 94       	cli

00000d34 <__stop_program>:
 d34:	ff cf       	rjmp	.-2      	; 0xd34 <__stop_program>
